generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id             Int      @id @default(autoincrement())
  name           String
  age            Int
  email          String   @unique
  enrollmentDate DateTime
  courses        StudentCourses[]
  isActive Boolean @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Teacher {
  id             Int      @id @default(autoincrement())
  name           String
  age            Int
  email          String   @unique
  departmentId   Int
  department     Department @relation(fields: [departmentId], references: [id])
  courses        TeacherCourses[]
  isActive Boolean @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Department {
  id          Int       @id @default(autoincrement())
  name        String
  building    String
  head        String
  courses     Course[]
  teachers    Teacher[]
  isActive Boolean @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Course {
  id           Int        @id @default(autoincrement())
  name         String
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
  students     StudentCourses[]
  teachers     TeacherCourses[]
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model StudentCourses {
  courseId  Int
  studentId Int
  course    Course  @relation(fields: [courseId], references: [id])
  student   Student @relation(fields: [studentId], references: [id])
  @@id([courseId, studentId])
}

model TeacherCourses {
  courseId  Int
  teacherId Int
  course    Course  @relation(fields: [courseId], references: [id])
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  @@id([courseId, teacherId])
}
